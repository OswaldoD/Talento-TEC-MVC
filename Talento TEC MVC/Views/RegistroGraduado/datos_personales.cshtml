@model Talento_TEC_MVC.Models.registro.graduado.datos_personales

@{
    ViewBag.Title = "Datos Personales";
}

<div class="progress">
    <div class="progress-bar progress-bar-success" role="progressbar" style="width: 12.5%">
        1: Elección de cuenta
    </div>
    <div class="progress-bar progress-bar-danger" role="progressbar" style="width: 12.5%">
        2: Datos personales
    </div>
    <div class="progress-bar progress-bar-info" role="progressbar" style="width: 12.5%">
        3: Contacto
    </div>
    <div class="progress-bar progress-bar-info" role="progressbar" style="width: 12.5%">
        4: Educación formal
    </div>
    <div class="progress-bar progress-bar-info" role="progressbar" style="width: 12.5%">
        5: Idiomas
    </div>
    <div class="progress-bar progress-bar-info" role="progressbar" style="width: 12.5%">
        6: Experiencia laboral
    </div>
    <div class="progress-bar progress-bar-info" role="progressbar" style="width: 12.5%">
        7: Referencias
    </div>
    <div class="progress-bar progress-bar-info" role="progressbar" style="width: 12.5%">
        8: Finalizar
    </div>
</div>

<h1>Registro de Graduado</h1>
<h3>Datos Personales</h3>
<br />
<p>Ingrese sus datos personales para poder acceder a los servicios de Talento TEC</p>
<p>Los campos con un asterisco (*) denotan que son campos obligatorios de ingresar</p>

<li role="presentation" class="divider-line"></li>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.primerApellido, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-4" })
            <div class="col-xs-6 col-sm-4">
                @Html.EditorFor(model => model.primerApellido, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
                @Html.ValidationMessageFor(model => model.primerApellido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.segundoApellido, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-4" })
            <div class="col-xs-6 col-sm-4">
                @Html.EditorFor(model => model.segundoApellido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.segundoApellido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nombreGraduado, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-4" })
            <div class="col-xs-6 col-sm-4">
                @Html.EditorFor(model => model.nombreGraduado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nombreGraduado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fechaNacimiento, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-4" })

            @Html.EditorFor(model => model.fechaNacimiento, new { htmlAttributes = new { @class = "form-control", @id = "fechaNacimiento", @type = "hidden" } })
            @Html.ValidationMessageFor(model => model.fechaNacimiento, "", new { @class = "text-danger" })

            <div class="col-xs-6 col-sm-4">
                <div class="diaDiv">
                    <select id="diaSelect" class="col-md-4" onclick="setDiaNacimiento()">
                        <option value="dia" default selected>- dia -</option>

                    </select>
                </div>
                <div class="mesDiv">
                    <select id="mesSelect" class="col-md-4" onclick="setMesNacimiento()">
                        <option value="mes" default selected>- mes -</option>
                        <option value="ene">enero</option>
                        <option value="feb">febrero</option>
                        <option value="mar">marzo</option>
                        <option value="abr">abril</option>
                        <option value="may">mayo</option>
                        <option value="jun">junio</option>
                        <option value="jul">julio</option>
                        <option value="ago">agosto</option>
                        <option value="sep">septiembre</option>
                        <option value="oct">octubre</option>
                        <option value="nov">noviembre</option>
                        <option value="dec">diciembre</option>
                    </select>
                </div>
                <div class="annoDiv">
                    <select id="annoSelect" class="col-md-4" onclick="setFechaNacimiento()">
                        <option value="anno" default selected>- año -</option>
                    </select>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.paisNacimiento, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-4" })

            @Html.EditorFor(model => model.paisNacimiento, new { htmlAttributes = new { @class = "form-control", @type = "hidden", @id="paisNacimiento" } })
            @Html.ValidationMessageFor(model => model.paisNacimiento, "", new { @class = "text-danger" })
            <div class="col-xs-8 col-sm-8">
                <div class="paisOptions">
                    <select id="paisSelect" class="col-md-5" onclick="setPais()">
                        <option value="pais" default selected>-- pais --</option>
                        <option value="COSTA_RICA">Costa Rica</option>
                    </select>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nacionalidad, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-4" })

            @Html.EditorFor(model => model.nacionalidad, new { htmlAttributes = new { @class = "form-control", @type = "hidden", @id="nacionalidad" } })
            @Html.ValidationMessageFor(model => model.nacionalidad, "", new { @class = "text-danger" })
            <div class="col-xs-6 col-sm-4">
                <div class="nacionalidadMenu">
                    <select id="nacionalidadSelect" class="col-md-5" onclick="setNacionalidad()">
                        <option value="nacionalidad" default selected>- nacionalidad -</option>
                        

                    </select>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tipoID, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-4" })

            @Html.EditorFor(model => model.tipoID, new { htmlAttributes = new { @class = "form-control", @type = "hidden", @id="tipoID" } })
            @Html.ValidationMessageFor(model => model.tipoID, "", new { @class = "text-danger" })
            <div class="col-xs-6 col-sm-4">
                <form>
                    <input type="radio" id="cedula" name="tipoid" value="cedula_identidad" onclick="tipoC()" /> Cédula de Identidad &nbsp;&nbsp;
                    <input type="radio" id="pasaporte" name="tipoid" value="pasaporte" onclick="tipoP()" /> Pasaporte
                </form>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.identificacion, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-4" })
            <div class="col-xs-6 col-sm-4">
                @Html.EditorFor(model => model.identificacion, new { htmlAttributes = new { @class = "form-control", @placeholder = "Digite su cédula sin guiones" } })
                @Html.ValidationMessageFor(model => model.identificacion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sexo, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-4" })

            @Html.EditorFor(model => model.sexo, new { htmlAttributes = new { @class = "form-control", @type = "hidden", @id="genero" } })
            @Html.ValidationMessageFor(model => model.sexo, "", new { @class = "text-danger" })

            <div class="col-xs-6 col-sm-4">
                <form>
                    <input type="radio" id="masculino" name="gender" value="masculino" onclick="generoM()" /> Masculino &nbsp;&nbsp;
                    <input type="radio" id="femenino" name="gender" value="femenino" onclick="generoF()" /> Femenino
                </form>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.carne, htmlAttributes: new { @class = "control-label col-xs-6 col-sm-4" })
            <div class="col-xs-6 col-sm-4">
                @Html.EditorFor(model => model.carne, new { htmlAttributes = new { @class = "form-control", @placeholder = "Digite su carné sin guiones" } })
                @Html.ValidationMessageFor(model => model.carne, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-5 col-md-10">
                <input type="submit" value="Siguiente" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<script>

    $(document).ready(function () {
        $.ajax({
            url: "https://talentotec-api.azurewebsites.net/api/Nacionalities",
            type: "GET",
            dataType: "json",
            success: function (data) {
                for (var i = 0; i < data.length; i++) {
                    //<option value="costarricense">costarricense</option>
                    $("#nacionalidadSelect").append("<option value='" + data[i] + "'>" + data[i].toLowerCase() + "</option>");
                }
            },
            error: function (e1, e2, e3) {
                console.log(e3 + " " + e2);
            }
        });
    });

    $(document).ready(function () {
        $.ajax({
            url: "https://talentotec-api.azurewebsites.net/api/Countries",
            type: "GET",
            dataType: "json",
            success: function (data) {
                for (var i = 0; i < data.length; i++) {
                    //<option value="PAIS_PAIS">pais pais</option>
                    var raw_data = data[i].split("_");
                    var formated_data = " ";
                    for (var j = 0; j < raw_data.length; j++) {
                        formated_data += raw_data[j] + " ";
                    }
                   
                    $("#paisSelect").append("<option value='" +
                        data[i] + "'>" +
                        formated_data.toLowerCase().replace(/^[\u00C0-\u1FFF\u2C00-\uD7FF\w]|\s[\u00C0-\u1FFF\u2C00-\uD7FF\w]/g, function(letter) {
                            return letter.toUpperCase();
                        })
                        + "</option>");
                }
            },
            error: function (e1, e2, e3) {
                console.log(e3 + " " + e2);
            }
        });
    });

    var diaNacim = " ";
    var mesNacim = " ";

    var option = document.getElementById("annoSelect");
    for (i = 1940; i < 2017; i++) {
        option.appendChild(new Option(i.toString(), i.toString()));
    }

    var option = document.getElementById("diaSelect");
    for (i = 1; i < 32; i++) {
        option.appendChild(new Option(i.toString(), i.toString()));
    }


    function setDiaNacimiento() {
        var select = $('.diaDiv option:selected').val();
        diaNacim = select;
    }

    function setMesNacimiento() {
        var select = $('.mesDiv option:selected').val();
        mesNacim = select;
    }

    function setFechaNacimiento() {
        //  var n = document.getElementById('fechaSelect').selectedIndex;
        var select = $('.annoDiv option:selected').val();
        //$select.selected;
        // console.log("Selected: " + $select);

        var x = document.getElementById('fechaNacimiento');
        x.setAttribute("value", diaNacim + "-" + mesNacim + "-" + select);

        console.log("here");
    }

    function setPais() {
        var select = $('.paisOptions option:selected').val();

        var x = document.getElementById('paisNacimiento');
        x.setAttribute("value", select);

        console.log(select);

    }

    function setNacionalidad() {
        var select = $('.nacionalidadMenu option:selected').val();

        var x = document.getElementById('nacionalidad');
        x.setAttribute("value", select);

        console.log(select);
    }

    function tipoC() {
        var c = document.getElementById("cedula");

        if (c.checked) {
            var p = document.getElementById("pasaporte");
            p.checked = false;

            var tipo = document.getElementById("tipoID");
            tipo.setAttribute("value", "Cedula de identidad");
        }
    }

    function tipoP() {
        var p = document.getElementById("pasaporte");

        if (p.checked) {
            var c = document.getElementById("cedula");
            c.checked = false;

            var tipo = document.getElementById("tipoID");
            tipo.setAttribute("value", "Cedula de identidad");
        }
    }

    function generoM() {
        var m = document.getElementById("masculino");

        if(m.checked){
            var f = document.getElementById("femenino");
            f.checked = false;

            var genero = document.getElementById("genero");
            genero.setAttribute("value","Masculino");
        }
    }

    function generoF() {
        var f = document.getElementById("femenino");

        if (f.checked) {
            var m = document.getElementById("masculino");

            m.checked = false;

            var genero = document.getElementById("genero");
            genero.setAttribute("value", "Femenino");
        }

    }




</script>